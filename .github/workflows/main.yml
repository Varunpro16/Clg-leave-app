name: Frontend Build & Deploy 

on:
  push:
    branches: [main] 
    paths:
      - "client/**"
  workflow_dispatch:

jobs:
  build-push:
    runs-on: self-hosted
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: ${{ github.run_number }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Build and Push Frontend Image
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY

        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG client/
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    needs: build-push
    runs-on: self-hosted
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: ${{ github.run_number }}
      DEPLOY_FOLDER: ${{ secrets.DEPLOY_FOLDER }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Copy docker-compose to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "client/docker-compose.yml"
        target: "~/frontend/client"
        overwrite: true
      
    - name: Deploy Frontend to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Set environment variables for docker-compose
          export ECR_REGISTRY=$ECR_REGISTRY
          export ECR_REPOSITORY=$ECR_REPOSITORY
          export IMAGE_TAG=$IMAGE_TAG
          export DEPLOY_FOLDER="frontend"
          export AWS_REGION=$AWS_REGION
          
          echo "ECR_REGISTRY: $ECR_REGISTRY"
          echo "ECR_REPOSITORY: $ECR_REPOSITORY"
          echo "IMAGE_TAG: $IMAGE_TAG"
          echo "DEPLOY_FOLDER: $DEPLOY_FOLDER"
          echo "AWS_REGION: $AWS_REGION"


          # Login to ECR
          # aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
          # aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY
          # docker rmi -f $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG || true
          # cd $DEPLOY_FOLDER/client
          # docker-compose up -d 
